/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import com.Service.ChatService;
import com.mashape.unirest.http.exceptions.UnirestException;
import com.update.ChangeFileUpdate;
import com.update.GithubUtility;

import domain.Release;
import javafx.scene.web.WebEngine;

import org.junit.Ignore;

import static org.junit.Assert.*;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class LibraryTest {
	final String specificRelease = "v1.0";
    GithubUtility update = new GithubUtility("deff83", "Index-Desktop", specificRelease);
    @Ignore
	@Test 
    public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }
    @Ignore
    @Test
    public void testGitUpdate() {
    	Release release = null;
    	File location = new File(".");
		try {
		    release = update.getLatestRelease();
		} catch (UnirestException ex) {
		    Logger.getLogger(LibraryTest.class.getName()).log(Level.SEVERE, null, ex);
		    fail("Couldn't connect or failed to download release information");
		}
		File file = null;
		try {
		    file = update.downloadAssetToSpecificLocation(location.toPath(), release.getAssets().get(0));
		} catch (UnirestException ex) {
		    Logger.getLogger(LibraryTest.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IOException ex) {
		    Logger.getLogger(LibraryTest.class.getName()).log(Level.SEVERE, null, ex);
		}
		assertTrue(file.exists());
		
    }
    @Ignore
    @Test
    public void testChatEvent() throws InterruptedException {
    	ChatService runChat = new ChatService(null);
    	runChat.run();
    }
    @Test
    public void testChangeFileUpdate() {
    	ChangeFileUpdate.getInstance().isChange("v2.0", null);
    }
}
